{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/components/lodge-incident/lodge-incident.component.css","webpack:///./src/app/components/lodge-incident/lodge-incident.component.html","webpack:///./src/app/components/lodge-incident/lodge-incident.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/map/map.component.css","webpack:///./src/app/components/map/map.component.html","webpack:///./src/app/components/map/map.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/request.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AgmCoreModule } from '@agm/core';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './components/map/map.component';\nimport { LodgeIncidentComponent } from './components/lodge-incident/lodge-incident.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { RequestService } from './services/request.service';\nimport { routing } from './app.routing';\nimport { AuthGuard } from './auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LodgeIncidentComponent,\n    RegisterComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyA3WcMmbKLsf8BVqZDhnj56Gxak1JsKGsg',\n      libraries: ['places']\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('id_token');\n        }\n      }\n    })\n  ],\n  providers: [AuthService, RequestService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\n\nimport { LodgeIncidentComponent } from './components/lodge-incident/lodge-incident.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MapComponent } from './components/map/map.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: MapComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'incident', component: LodgeIncidentComponent, canActivate: [AuthGuard] }\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate() {\n    if (!this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"incidentForm\\\" (ngSubmit)=\\\"onSubmit(incidentForm.value)\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"type\\\">Incident type:</label>\\n    <select class=\\\"form-control\\\" id=\\\"type\\\" formControlName=\\\"type\\\">\\n      <option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\n        {{ type }}\\n      </option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"location\\\">Incident location:</label>\\n    <input id=\\\"location\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"location\\\" />\\n    <small *ngIf=\\\"incidentForm.controls.location.errors\\\">Enter the address of the incident.</small>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Incident description:</label>\\n    <textarea id=\\\"location\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" rows=\\\"3\\\"></textarea>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!incidentForm.valid\\\">Submit</button>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RequestService } from '../../services/request.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-lodge-incident',\n  templateUrl: './lodge-incident.component.html',\n  styleUrls: ['./lodge-incident.component.css']\n})\nexport class LodgeIncidentComponent implements OnInit {\n  incidentForm;\n\n  types = [\n    'Car accident',\n    'Bush fire',\n    'Building fire',\n    'Police investigation'\n  ];\n\n  constructor(\n    private requestService: RequestService,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.incidentForm = new FormGroup({\n      type: new FormControl('', Validators.required),\n      location: new FormControl('', Validators.required),\n      description: new FormControl('')\n    });\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n    this.requestService.geocodeAddress(formValues.location).subscribe((location) => {\n      formValues.latitude = location.lat;\n      formValues.longitude = location.lng;\n      formValues.reportedBy = this.authService.user.name;\n      this.requestService.lodgeIncident(formValues).subscribe((response) => {\n        if (response.success) {\n          alert(response.message);\n          this.router.navigate(['']);\n        } else {\n          alert(response.message);\n        }\n      });\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\" style=\\\"padding: 20px\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username:</label>\\n      <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\" />\\n      <small class=\\\"text-muted form-text\\\" *ngIf=\\\"loginForm.controls.username.errors\\\">Enter your username</small>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password:</label>\\n      <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\" />\\n      <small class=\\\"text-muted form-text\\\" *ngIf=\\\"loginForm.controls.password.errors\\\">Enter your password</small>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(formValues) {\n    this.authService.authenticateUser(formValues).subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.router.navigate(['']);\n      } else {\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n","module.exports = \"#map {\\n  position: fixed !important;\\n  top: 0;\\n  left: 0;\\n  height: 100vh;\\n  width: 100vw;\\n}\\n\\n.map__search {\\n  position: fixed;\\n  top: 2rem;\\n  left: 50%;\\n  z-index: 2;\\n  margin-left: -12.25%;\\n\\n  height: 2.5rem;\\n  width: 25%;\\n\\n  border-radius: 10px;\\n  font-size: 1.25rem;\\n\\n  border: none;\\n  color: #FFF;\\n  background: rgba(0, 0, 0, 0.5);\\n  text-align: center;\\n  cursor: pointer;\\n}\\n\\n.map__search:focus {\\n  outline: none;\\n}\\n\\n.map__search::-webkit-input-placeholder {\\n   color: #FFF;\\n}\\n\\n.map__report {\\n  position: fixed;\\n  top: 5rem;\\n  left: 50%;\\n  margin-left: -13rem;\\n}\\n\\n.map__report  p{\\n  line-height: 1.5rem;\\n}\\n\\n.map__report  button{\\n  border-radius: 10px;\\n  width: 5rem;\\n}\\n\\n.map__report button:nth-child(1) {\\n  margin-right: 1rem;\\n  margin-left: 7rem;\\n}\\n\\n#map__info {\\n  position: fixed;\\n  left: -25%;\\n\\n  width: 25%;\\n  height: 100%;\\n\\n  background: rgba(0, 0, 0, 0.5);\\n  border-top-right-radius: 25px;\\n  border-bottom-right-radius: 25px;\\n}\\n\\n#map__info .map__info__container {\\n  position: relative;\\n  padding: 2.5rem;\\n}\\n\\n#map__info .map__info__container h1, p{\\n  color: #FFF;\\n}\\n\\n#map__info .map__info__container .map__info__toggle {\\n  position: absolute;\\n  top: 50vh;\\n  right: -34px;\\n  background: rgba(0, 0, 0, 0.5);\\n  border: 0;\\n  padding: 10px 10px 10px 9px;\\n}\\n\\n#map__info .map__info__container .map__info__toggle:focus {\\n  outline:none;\\n}\\n\\n#map__info .map__info__container #map__info__toggleIcon {\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n}\\n\\n#map__info .map__info__container #map__info__toggleIcon.show {\\n  -webkit-transform: rotate(0);\\n          transform: rotate(0);\\n}\\n\\n#map__info.show {\\n  left: 0 !important;\\n}\\n\"","module.exports = \"<agm-map id=\\\"map\\\"\\n  [latitude]=\\\"lat\\\"\\n  [longitude]=\\\"lng\\\"\\n  [zoom]=\\\"zoom\\\"\\n  (mapReady)=\\\"mapReady($event)\\\">\\n  <agm-marker\\n      *ngFor=\\\"let m of markers; let i = index\\\"\\n      (markerClick)=\\\"clickedMarker(m)\\\"\\n      [latitude]=\\\"m.location.coordinates[1]\\\"\\n      [longitude]=\\\"m.location.coordinates[0]\\\"\\n      [iconUrl]=\\\"m.iconUrl\\\">\\n  </agm-marker>\\n</agm-map>\\n\\n<input id=\\\"searchLocation\\\" type=\\\"text\\\" class=\\\"form-control map__search\\\" #searchLocation autocomplete=\\\"off\\\"/>\\n\\n<div class=\\\"map__report\\\">\\n  <!-- logged in buttons -->\\n  <div *ngIf=\\\"authService.user\\\">\\n    <button class=\\\"mat-raised-button\\\" routerLink=\\\"/incident\\\">Report</button>\\n    <button class=\\\"mat-raised-button\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n  </div>\\n\\n  <!-- logged out buttons -->\\n  <div *ngIf=\\\"!authService.user\\\">\\n    <div>\\n      <button class=\\\"mat-raised-button\\\" routerLink=\\\"/login\\\">Login</button>\\n      <button class=\\\"mat-raised-button\\\" routerLink=\\\"/register\\\">Register</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div id=\\\"map__info\\\">\\n  <div class=\\\"map__info__container\\\">\\n    <button class=\\\"map__info__toggle\\\" (click)=\\\"toggleMenu()\\\"><img id=\\\"map__info__toggleIcon\\\" src=\\\"../../assets/toggleMenu.svg\\\"></button> \\n    <h1>Event Info</h1>\\n    <p>Accident Type: <span id=\\\"map__info__type\\\"></span></p>\\n    <p id=\\\"map__info__location\\\">Location</p>\\n    <p id=\\\"map__info__description\\\">Description</p>\\n    <p>Reported By: <span id=\\\"map__info__reported\\\"></span></p>\\n    <p *ngIf=\\\"!authService.user\\\" class=\\\"map__info__notice\\\">To register an event, please login or register a new account</p>\\n  </div>\\n</div>\\n\"","import { Component , OnInit, NgModule, NgZone, ElementRef, ViewChild } from '@angular/core';\nimport { AgmMap, MapsAPILoader } from '@agm/core';\nimport { RequestService } from '../../services/request.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport {} from '@types/googlemaps';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  protected map: any;\n  // Array to hold incident markers\n  markers =  [];\n  // initial center position for the map\n  lat = -33.865143;\n  lng = 151.209900;\n  zoom = 14;\n\n  @ViewChild('searchLocation')\n  public searchElementRef: ElementRef;\n\n  @ViewChild(AgmMap)\n  public agmMap: AgmMap;\n\n  constructor(\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private requestService: RequestService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n    // Solution to run map functions\n    // Called in map.component.html on map ready\n    protected mapReady(map) {\n    this.map = map;\n  }\n\n  ngOnInit() {\n    // Initalise markers\n    this.updateMarkers();\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.lat = position.coords.latitude;\n      this.lng = position.coords.longitude;\n    });\n\n    // Google Places Autocomplete\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement);\n\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          this.lat = place.geometry.location.lat();\n          this.lng = place.geometry.location.lng();\n          this.updateMarkers();\n        });\n      });\n    });\n  }\n\n  updateMarkers() {\n    this.requestService.getMarkers(this.lat, this.lng).subscribe((response) => {\n      if (response.success) {\n        this.markers = response.markers;\n        console.log(this.markers);\n\n        this.markers.forEach(function(value, key) {\n\n          switch (value.alertType) {\n            case 'Police investigation':\n              value.iconUrl = '../../assets/police.png';\n              break;\n            case 'Building fire':\n              value.iconUrl = '../../assets/fire.png';\n              break;\n            case 'Car accident':\n              value.iconUrl = '../../assets/caraccident.png';\n              break;\n            default:\n              value.iconUrl = '../../assets/question.png';\n          }\n        });\n      } else {\n        alert(response.message);\n      }\n    });\n  }\n\n  toggleMenu() {\n    document.getElementById('map__info').classList.toggle('show');\n    document.getElementById('map__info__toggleIcon').classList.toggle('show');\n  }\n\n  clickedMarker(marker) {\n    this.requestService.geocodeAddress('');\n\n    if ( document.getElementById('map__info').classList.contains('show')) {}\n    document.getElementById('map__info__description').innerHTML = marker.description;\n    document.getElementById('map__info__type').innerHTML = marker.alertType;\n    //document.getElementById('map__info__description').innerHTML = marker.description;\n    document.getElementById('map__info__reported').innerHTML = marker.reportedBy;\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onSubmit(registrationForm.value)\\\" style=\\\"padding: 20px\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\" />\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"registrationForm.controls.name.errors\\\">Enter your name</small>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email:</label>\\n      <input type=\\\"text\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\" />\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"registrationForm.controls.email.errors\\\">Enter your email</small>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username:</label>\\n      <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\" />\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"registrationForm.controls.username.errors\\\">Enter your username</small>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password:</label>\\n      <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\" />\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"registrationForm.controls.password.errors\\\">Enter your password</small>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"!registrationForm.valid\\\">Register</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registrationForm;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.registrationForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n    this.authService.registerUser(formValues).subscribe(data => {\n      if (data.success) {\n        alert('Successfully registered account');\n        this.router.navigate(['/login']);\n      } else {\n        alert('Unable to register account');\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: Http, private jwtHelper: JwtHelperService) { }\n\n  registerUser(user) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n  authenticateUser(user) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/authenticate', user, { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n  getProfile() {\n    const headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('users/profile', { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return this.jwtHelper.isTokenExpired();\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  constructor(\n    private http: Http,\n    private authService: AuthService\n  ) { }\n\n  // Geocode location from address\n  geocodeAddress(address) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('incidents/geocode/' + address, { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n  // Create incident in the database\n  lodgeIncident(newIncident) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('incidents/lodge', newIncident, { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n  getMarkers(latitude, longitude) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('incidents/locations/' + latitude + '/' + longitude + '/10000', { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n  updateAlertStatus(alertID) {\n    const body = {\n      alertID: alertID\n    };\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post('incidents/update', body, { headers: headers })\n    .pipe(map((response: any) => response.json()));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  GOOGLE_API_KEY: ''\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}